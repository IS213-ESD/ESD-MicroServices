version: "1.0"

networks:
  delectric-network:
    driver: bridge

volumes:
  delectricdb-vol:
  pgdata: 
  rabbitmq_data-1:

services:
  #######################################
  # Mysql: The database used by all
  #######################################
  Delectric-mysql:
    image: mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_USER_PASSWORD}
    volumes:  
      - ./init-scripts:/docker-entrypoint-initdb.d
      - ./init-scripts/my.cnf:/etc/mysql/conf.d/my.cnf # Set config file to adjust timezone to SGT
    networks:
      - delectric-network
  
  #######################################
  # Charging Station Microservice
  #######################################
  delectric-charging-station:
    build:
      context: ./charging-station
    ports:
      - "5001:5001"
    depends_on:
      - Delectric-mysql
    environment:     
      - dbURL=mysql+mysqlconnector://${DB_USER}:${DB_USER_PASSWORD}@Delectric-mysql:3306/ # Pointed to chargingstationdb
    networks:
      - delectric-network

  #######################################
  # User Microservice
  #######################################
  delectric-user:
    build:
      context: ./user
    ports:
      - "5002:5002"
    depends_on:
      - Delectric-mysql
    environment:      
      - dbURL=mysql+mysqlconnector://${DB_USER}:${DB_USER_PASSWORD}@Delectric-mysql:3306/
      - FIREBASE_API=${FIREBASE_API}
      - AUTHDOMAIN=${AUTHDOMAIN}
      - PROJECTID=${PROJECTID}
      - STORAGEBUCKET=${STORAGEBUCKET}
      - MESSAGINGSENDERID=${MESSAGINGSENDERID}
      - APPID=${APPID}
    networks:
      - delectric-network

  #######################################
  # User Notification Service
  #######################################
  delectric-user-notification:
    build:
      context: ./usernotification
    ports:
      - "5003:5003"
    environment:    
      ACCOUNT_SID: '${ACCOUNT_SID}'
      AUTH_TOKEN: '${AUTH_TOKEN}'
      TWILIO_NUM: '${TWILIO_NUM}'
    networks:
      - delectric-network

  #######################################
  # Payment Microservice
  #######################################
  delectric-payment:
    build:
      context: ./payment
    ports:
      - "5004:5004"
    depends_on:
      - Delectric-mysql
    environment:      
      - dbURL=mysql+mysqlconnector://${DB_USER}:${DB_USER_PASSWORD}@Delectric-mysql:3306/ 
      - STRIPE_API_KEY=${STRIPE_API_KEY}
    networks:
      - delectric-network

  #######################################
  # IOT Charger Microservice
  #######################################
  delectric-iot-charger:
    build:
      context: ./iot-charger
    ports:
      - "5005:5005"
    depends_on:
      - Delectric-mysql
    environment:      
      - rabbitMQ=${rabbitMQCred}@rabbitmq:5672//
      - dbURL=mysql+mysqlconnector://${DB_USER}:${DB_USER_PASSWORD}@Delectric-mysql:3306/ 
    networks:
      - delectric-network

  #######################################
  # Charger-Availability Microservice
  #######################################

  delectric-charger-availability:
    build: 
      context: ./charger-availability
    ports:
      - "5006:5006"
    depends_on:
      - Delectric-mysql
      - delectric-charging-station
      - rabbitmq
    environment:
      - dbURL=mysql+mysqlconnector://${DB_USER}:${DB_USER_PASSWORD}@Delectric-mysql:3306/
      - notification_URL=http://delectric-handle-notifications:5104/send-notification
      - BOOKING_URL=http://delectric-charging-station:5001/charging-station-booking/
      - RABBITMQHOST=rabbitmq
      - COMPLEX_HANDLE_LATE_COLLECTION_BASE=http://delectric-complex-handle-late-collection:5105/late_complex/
      - CHARGING_STATION_BOOKING_BASE=http://delectric-charging-station:5001/charging-station-booking/
    networks:
      - delectric-network


  #######################################
  # Complex-Micro Service
  #######################################
  #######################################
  # Complex: Handle Bookings
  #######################################
  delectric-complex-handle-bookings:
    build:
      context: ./complex/handle-bookings
    ports:
      - "5101:5101"
    depends_on:
      - Delectric-mysql
      - delectric-user
      - delectric-charging-station
    environment:      
      CHARGING_STATION_URL: http://delectric-charging-station:5001/charging-station/chargers
      BOOKING_USER_URL: http://delectric-charging-station:5001/charging-station-booking/user/
      BOOKING_BOOKING_URL: http://delectric-charging-station:5001/charging-station-booking/booking/
      CANCEL_BOOKING_URL: http://delectric-charging-station:5001/charging-station-booking/cancel_booking
      COMPLETE_BOOKING_URL: http://delectric-charging-station:5001/charging-station-booking/complete_booking
    networks:
      - delectric-network

  #######################################
  # Complex Book charger Microservice
  #######################################
  delectric-book_charger:
    build:
      context: ./complex/book-charging-station
    restart: always
    depends_on:
      - delectric-payment
      - delectric-user
      - delectric-charging-station
      - rabbitmq
    environment:
      RABBITMQHOST: rabbitmq
      CHARGING_STATION_BOOKING_BASE: http://delectric-charging-station:5001/charging-station-booking
      CHARGING_STATION_BASE: http://delectric-charging-station:5001/charging-station
      PAYMENT_BASE: http://delectric-payment:5004/
      USER_BASE: http://delectric-user:5002/
    ports:
      - "5102:5102"
    networks:
      - delectric-network
  
  #######################################
  # Complex: Handle IOT Chargers
  #######################################
  delectric-complex-handle-iot-chargers:
    build:
      context: ./complex/handle-iot-chargers
    ports:
      - "5103:5103"
    depends_on:
      - Delectric-mysql
      - delectric-charging-station
      - delectric-iot-charger
    environment:      
      IOT_GET_CHARGERS_BY_ID_URL: http://delectric-iot-charger:5005/iot-chargers/
      UPDATE_CHARGING_STATUS_URL: http://delectric-charging-station:5001/charging-station/update-charging-status/
      REMOVE_CHARGING_STATUS_URL: http://delectric-charging-station:5001/charging-station/remove-charging-status/
      IOT_SIMPLE_BASE: http://delectric-iot-charger:5005
      CHARGING_STATION_BOOKING_BASE: http://delectric-charging-station:5001/charging-station-booking
    networks:
      - delectric-network
  
  #######################################
  # Complex: Handle Notifications
  #######################################
  delectric-complex-handle-notification:
    build:
      context: ./complex/handle-notifications
    ports:
      - "5104:5104"
    depends_on:
      - Delectric-mysql
      - delectric-charging-station
      - delectric-user-notification
      - delectric-user
      - rabbitmq
    environment:      
      RABBITMQHOST: rabbitmq
      USER_BASE: http://delectric-user:5002/
      USER_NOTIFICATION_BASE: http://delectric-user-notification:5003/
      CHARGING_STATION_BOOKING_BASE: http://delectric-charging-station:5001/charging-station-booking/
      CHARGING_STATION_BASE: http://delectric-charging-station:5001/charging-station/
      GET_USER_DETAILS_URL: http://delectric-user:5002/getuserdetails/
    networks:
      - delectric-network

  #######################################
  # Complex-Micro Service Late Collection
  #######################################
  delectric-complex-handle-late-collection:
    build:
      context: ./complex/handle-late-collection
    ports:
      - "5105:5105"
    depends_on:
      - Delectric-mysql
      - delectric-user
      - delectric-charging-station
      - delectric-user-notification
      - rabbitmq
    environment:      
      RABBITMQHOST: rabbitmq
      PYTHONUNBUFFERED: 1
      CHARGING_STATION_BASE: http://delectric-charging-station:5001/charging-station/
      CHARGING_STATION_BOOKING_BASE: http://delectric-charging-station:5001/charging-station-booking/
      PAYMENT_BASE: http://delectric-payment:5004/
      USER_BASE: http://delectric-user:5002/

    networks:
      - delectric-network

  ####################################
  # RabbitMQ: The messaging broker   
  ####################################
  rabbitmq:
    image: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes: 
      - rabbitmq_data-1:/var/lib/rabbitmq
    networks:
      - delectric-network

  ####################################
  # IOT Charger - Stand Alone
  ####################################
  worker:
    build:
      context: ./iot-charger
    command: celery -A celery_worker.celery worker --loglevel=info
    volumes:
      - ".:/code"
    depends_on:
      - rabbitmq
    networks:
      - delectric-network
    environment:
      - IOT_COMPLEX_BASE=http://delectric-complex-handle-iot-chargers:5103
      - rabbitMQ=${rabbitMQCred}@rabbitmq:5672//
      - dbURL=mysql+mysqlconnector://${DB_USER}:${DB_USER_PASSWORD}@Delectric-mysql:3306/ 

  #######################################
  #          KONG CREATION              #
  #######################################
  #######################################
  # Postgres: The database used by Kong
  #######################################
  kong-database:
    image: postgres:15 # tested 20231101; Ref: https://docs.konghq.com/gateway/latest/support/third-party/
    platform: linux/amd64  # <- required for Mac M1 chip. Otherwise, can remove
    restart: always
    networks:
      - delectric-network
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data

  #######################################
  # Kong database migration
  #######################################
  kong-migration:
    image: kong/kong-gateway:3.2.2.5 # tested 20231101
    platform: linux/amd64  # <- required for Mac M1 chip. Otherwise, can remove
    command: "kong migrations bootstrap"
    restart: on-failure
    networks:
      - delectric-network
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: password
    depends_on:
      - kong-database

  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    image: kong/kong-gateway:3.2.2.5 # tested 20231101
    platform: linux/amd64  # <- required for Mac M1 chip. Otherwise, can remove
    restart: always
    networks:
      - delectric-network
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: password
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_URL: http://localhost:8002
    depends_on:
      - kong-migration
    ports: # https://docs.konghq.com/gateway/latest/production/networking/default-ports/
      - "8000:8000" # Takes incoming HTTP traffic from Consumers, and forwards it to upstream Services.
      - "8443:8443" # Takes incoming HTTPS traffic from Consumers, and forwards it to upstream Services.
      - "8001:8001" # Admin API. Listens for calls from the command line over HTTP.
      - "8444:8444" # Admin API. Listens for calls from the command line over HTTPS.
      - "8002:8002" # Kong Manager (GUI). Listens for HTTP traffic.
      - "8445:8445" # Kong Manager (GUI). Listens for HTTPS traffic.
      - "8003:8003" # Dev Portal. Listens for HTTP traffic, assuming Dev Portal is enabled.
      - "8446:8446" # Dev Portal. Listens for HTTP traffic, assuming Dev Portal is enabled.
      - "8004:8004" # Dev Portal /files traffic over HTTPS, assuming the Dev Portal is enabled.
      - "8447:8447" # Dev Portal /files traffic over HTTPS, assuming the Dev Portal is enabled.





